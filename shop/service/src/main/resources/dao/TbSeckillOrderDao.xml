<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.yh.shop.dao.TbSeckillOrderDao">
  <resultMap id="BaseResultMap" type="org.yh.shop.model.TbSeckillOrder">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="seckill_id" jdbcType="BIGINT" property="seckillId" />
    <result column="money" jdbcType="DECIMAL" property="money" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="receiver_address" jdbcType="VARCHAR" property="receiverAddress" />
    <result column="receiver_mobile" jdbcType="VARCHAR" property="receiverMobile" />
    <result column="receiver" jdbcType="VARCHAR" property="receiver" />
    <result column="transaction_id" jdbcType="VARCHAR" property="transactionId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, seckill_id, money, user_id, create_time, pay_time, `status`, receiver_address, 
    receiver_mobile, receiver, transaction_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_seckill_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectOne" resultMap="BaseResultMap">
     select <include refid="Base_Column_List" />
    from tb_seckill_order  where transaction_id=#{orderTrancId}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_seckill_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="org.yh.shop.model.TbSeckillOrder" useGeneratedKeys="true">
    insert into tb_seckill_order (seckill_id, money, user_id, 
      create_time, pay_time, `status`, 
      receiver_address, receiver_mobile, receiver, 
      transaction_id)
    values (#{seckillId,jdbcType=BIGINT}, #{money,jdbcType=DECIMAL}, #{userId,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{payTime,jdbcType=TIMESTAMP}, #{status,jdbcType=CHAR}, 
      #{receiverAddress,jdbcType=VARCHAR}, #{receiverMobile,jdbcType=VARCHAR}, #{receiver,jdbcType=VARCHAR}, 
      #{transactionId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="org.yh.shop.model.TbSeckillOrder" useGeneratedKeys="true">
    insert into tb_seckill_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="seckillId != null">
        seckill_id,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="receiverAddress != null">
        receiver_address,
      </if>
      <if test="receiverMobile != null">
        receiver_mobile,
      </if>
      <if test="receiver != null">
        receiver,
      </if>
      <if test="transactionId != null">
        transaction_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="seckillId != null">
        #{seckillId,jdbcType=BIGINT},
      </if>
      <if test="money != null">
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="receiverAddress != null">
        #{receiverAddress,jdbcType=VARCHAR},
      </if>
      <if test="receiverMobile != null">
        #{receiverMobile,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null">
        #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="transactionId != null">
        #{transactionId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.yh.shop.model.TbSeckillOrder">
    update tb_seckill_order
    <set>
      <if test="seckillId != null">
        seckill_id = #{seckillId,jdbcType=BIGINT},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=CHAR},
      </if>
      <if test="receiverAddress != null">
        receiver_address = #{receiverAddress,jdbcType=VARCHAR},
      </if>
      <if test="receiverMobile != null">
        receiver_mobile = #{receiverMobile,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null">
        receiver = #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="transactionId != null">
        transaction_id = #{transactionId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.yh.shop.model.TbSeckillOrder">
    update tb_seckill_order
    set seckill_id = #{seckillId,jdbcType=BIGINT},
      money = #{money,jdbcType=DECIMAL},
      user_id = #{userId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=CHAR},
      receiver_address = #{receiverAddress,jdbcType=VARCHAR},
      receiver_mobile = #{receiverMobile,jdbcType=VARCHAR},
      receiver = #{receiver,jdbcType=VARCHAR},
      transaction_id = #{transactionId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>